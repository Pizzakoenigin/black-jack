:root {
  --background: rgba(199, 224, 180, 0.436);
}

body {
  font-family: sans-serif;
  padding: 0.5em;
  /* background-color: rgba(6, 173, 0, 0.545); */
  background: url(background.jpg);
  background-size: cover;
}

input:invalid {
  border: 3px solid red;
}

.container {}

.playfield {
  background-color: var(--background);
  border-radius: 1em;
  padding: 1em
}

button {
  background-color: rgb(166, 11, 11);
  color: white;
  border: 1px white;
  border-radius: 1em;
  outline: 2px solid white;
  outline-offset: -5px;
  max-width: fit-content;
  height: fit-content;
  padding: 20px;
  margin: auto 0 auto 0;
  filter: drop-shadow(0 0 0.25rem rgba(0, 0, 0, 0.591));
}

input {
  filter: drop-shadow(0 0 0.25rem rgba(0, 0, 0, 0.591));
}

button:focus,
button:active,
button:hover,
input:focus,
input:active,
input:hover {
  outline: 2px solid black;
  /* outline-offset: 0; */
  filter: drop-shadow(0 0 1rem rgba(0, 0, 0, 0.693));
  transition: all 0.2s ease-in;
}


.createPlayerUI {
  background-color: var(--background);
  border-radius: 1em;
  padding: 1em;
  text-align: center;
  display: flex;
  flex-direction: column;
  /* gap: 2em; */
  justify-content: space-around;

  button {
    margin: 0 auto 0 auto;
  }

  input {
    max-width: 20%;
    margin: 0.5em auto 2em auto;
  }
}

.gameButtons {
  display: flex;
  flex-direction: row;
  justify-content: space-around;
}

.playersCards {
  background-color: rgba(255, 228, 165, 0.04);
  min-height: 20vh;
  display: flex;
  flex-direction: row;
  gap: 1em
}

.cardArea {
  border: 1px solid rgba(165, 165, 165, 0.4);
  border-radius: 1em;
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: 1em;
  padding: 1em;
}

.handCards {
  display: flex;
  flex-direction: row;
  gap: 1em;
  flex-wrap: wrap;
  /* padding: 1em; */
}

.cardDeck {
  width: calc(63mm/2);
  height: calc(88mm/2);
  background: url(cards/backsideCard.jpg);
  border-radius: 0.5em;
  background-size: contain;
  color: rgb(0, 0, 0);
  font-size: 2em;
  text-shadow: 2px 2px rgb(252, 252, 252);
  border: none;
  filter: drop-shadow(0 0 0.25rem rgba(0, 0, 0, 0.591));
  outline: none;
  outline-offset: 0;
  max-width: 100%;
  padding: 0;
  margin: 0 auto 0 auto;
}

.cardDeck:hover {
  /* transform: perspective(1500px ) rotateY(20deg); */

}

.transparent .card {
  opacity: 50%;

}

.transparent .card-inner {
  transform: rotateY(180deg);
}

.card {
  background-color: transparent;
  perspective: 1000px;
  width: calc(63mm/3);
  height: calc(88mm/3);
}

.card-inner {
  position: relative;
  width: calc(63mm/3);
  height: calc(88mm/3);
  text-align: center;
  transition: transform 0.8s;
  transform-style: preserve-3d;
  background-size: contain;
}

.card:hover .card-inner {
  transform: rotateY(180deg);
}

.card-front {
  background: url(cards/backsideCard.jpg);

  background-size: contain;
}

.card-front,
.card-back {
  position: absolute;
  width: calc(63mm/3);
  height: calc(88mm/3);
  -webkit-backface-visibility: hidden;
  /* Safari */
  backface-visibility: hidden;
  border-radius: 0.5em;
  background-size: contain;
}

/* Style the front side (fallback if image is missing) */
.flip-card-front {
  /* background-color: #bbb;
    color: black; */
}

/* Style the back side */
.card-back {
  /* background-color: dodgerblue;
    color: white; */
  transform: rotateY(180deg);


  border-radius: 0.5em;
  background-size: contain !important;
  background-repeat: no-repeat !important;

}


/* .card-back {
    width: calc(63mm/2);
    height: calc(88mm/2);
    background: url(cards/backsideCard.jpg);
    border-radius: 0.5em;
    background-size: contain; 
    transform: perspective(1500px ) rotateY(0deg);
    filter: drop-shadow(0 0 0.25rem rgba(0, 0, 0, 0.591));
    transition: transform 0.5s ease 0s;
    border: 1px solid rgba(165, 165, 165, 0.4);
}

.card-back:hover {
    transform: perspective(1500px ) rotateY(20deg);

} */


.square {

  /* border: rgb(255, 255, 255) solid 1px */
}

input {}